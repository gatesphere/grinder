#!/usr/bin/env python

import re
import os.path
import pickle
import sys
import traceback

grinder_gold = 0
grinder_unlocked_libs = []
grinder_stats_file = '.stats.grinder'
def read_grinder_stats():
  global grinder_gold, grinder_unlocked_libs
  if os.path.exists(grinder_stats_file):
    f = open(grinder_stats_file, 'r')
    c = pickle.load(f)
    f.close()
    grinder_gold, grinder_unlocked_libs = c[0], c[1]

def write_grinder_stats():
  f = open(grinder_stats_file, 'w')
  pickle.dump((grinder_gold, grinder_unlocked_libs), f)
  f.close()


def print_grinder_stats():
  print "Your grinder stats:"
  print "Gold: %d" % grinder_gold
  print "Unlocked imports:"
  for lib in grinder_unlocked_libs:
    print "  %s" % lib

def check_grinder_program(prog):
  with open(prog) as f:
    source_lines = f.readlines()
    
    # check imports for any locked libraries
    # if any found, fill grinder_errors with
    # appropriate information, return False
    
    # else, populate grinder_source with the
    # proper info, return True

def run_grinder_program():
  exec(source)
  grinder_gold += len(source)

def print_grinder_errors():
  pass

def run_grinder_shop():
  pass

if __name__ == "__main__":
  read_grinder_stats()
  arg = sys.argv[1]
  if arg == "shop":
    run_grinder_shop()
  elif arg == "stats":
    print_grinder_stats()
  elif arg == "cheat":
    grinder_gold += 1000;
    write_grinder_stats()
  else:
    if check_grinder_program(arg):
      run_grinder_program()
      write_grinder_stats()
    else:
      print_grinder_errors()
